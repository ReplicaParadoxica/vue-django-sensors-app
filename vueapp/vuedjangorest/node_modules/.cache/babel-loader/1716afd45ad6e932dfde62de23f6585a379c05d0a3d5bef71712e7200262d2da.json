{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'SensorMetrics',\n  data() {\n    return {\n      sensors: [],\n      metrics: []\n    };\n  },\n  created() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData() {\n      axios.get('http://localhost:8000/api/sensors/').then(response => {\n        this.sensors = response.data;\n        return axios.get('http://localhost:8000/api/metrics/');\n      }).then(response => {\n        this.metrics = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","sensors","metrics","created","fetchData","methods","get","then","response","catch","error","console","log"],"sources":["src/views/Table.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h2> Sensor Metrics! </h2>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Sensor Name</th>\r\n                    <th v-for=\"metric in metrics\">{{ metric.name }} ({{ metric.unit }})</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"sensor in sensors\" :key=\"sensor.id\">\r\n                    <td>{{ sensor.name }}</td>\r\n                    <td v-for=\"metric in metrics\" :key=\"metric.id\">{{ sensor.metrics[metric.id] }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    name: 'SensorMetrics',\r\n    data() {\r\n        return {\r\n            sensors: [],\r\n            metrics: [],\r\n        };\r\n    },\r\n    created() {\r\n        this.fetchData();\r\n    },\r\n    methods: {\r\n        fetchData() {\r\n            axios.get('http://localhost:8000/api/sensors/')\r\n                .then(response => {\r\n                    this.sensors = response.data;\r\n                    return axios.get('http://localhost:8000/api/metrics/');\r\n                })\r\n                .then(response => {\r\n                    this.metrics = response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n        },\r\n    },\r\n};\r\n</script>\r\n  "],"mappings":"AAqBA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAD,UAAA;MACAN,KAAA,CAAAQ,GAAA,uCACAC,IAAA,CAAAC,QAAA;QACA,KAAAP,OAAA,GAAAO,QAAA,CAAAR,IAAA;QACA,OAAAF,KAAA,CAAAQ,GAAA;MACA,GACAC,IAAA,CAAAC,QAAA;QACA,KAAAN,OAAA,GAAAM,QAAA,CAAAR,IAAA;MACA,GACAS,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}