{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      sensors: [],\n      metrics: []\n    };\n  },\n  mounted() {\n    axios.get('/api/sensors/').then(response => {\n      this.sensors = response.data;\n      this.loadMetrics();\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  methods: {\n    loadMetrics() {\n      axios.get('/api/metrics/').then(response => {\n        this.metrics = response.data.map(metric => {\n          return {\n            id: metric.id,\n            name: metric.name,\n            unit: ''\n          };\n        });\n        this.loadUnits();\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    loadUnits() {\n      axios.get('/api/units/').then(response => {\n        response.data.forEach(unit => {\n          const metricIndex = this.metrics.findIndex(metric => metric.id === unit.metric);\n          if (metricIndex !== -1) {\n            this.metrics[metricIndex].unit = `${unit.metric_name} (${unit.name})`;\n          }\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","sensors","metrics","mounted","get","then","response","loadMetrics","catch","error","console","log","methods","map","metric","id","name","unit","loadUnits","forEach","metricIndex","findIndex","metric_name"],"sources":["src/views/Table.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Sensor Name</th>\r\n                    <th v-for=\"metric in metrics\" :key=\"metric.id\">{{ metric.name }} ({{ metric.unit }})</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"sensor in sensors\" :key=\"sensor.id\">\r\n                    <td>{{ sensor.name }}</td>\r\n                    <td v-for=\"metric in metrics\" :key=\"metric.id\">{{ sensor.measurements[metric.name] }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            sensors: [],\r\n            metrics: []\r\n        };\r\n    },\r\n\r\n    mounted() {\r\n        axios.get('/api/sensors/')\r\n            .then(response => {\r\n                this.sensors = response.data;\r\n                this.loadMetrics();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    },\r\n\r\n    methods: {\r\n        loadMetrics() {\r\n            axios.get('/api/metrics/')\r\n                .then(response => {\r\n                    this.metrics = response.data.map(metric => {\r\n                        return {\r\n                            id: metric.id,\r\n                            name: metric.name,\r\n                            unit: ''\r\n                        };\r\n                    });\r\n                    this.loadUnits();\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n        },\r\n\r\n        loadUnits() {\r\n            axios.get('/api/units/')\r\n                .then(response => {\r\n                    response.data.forEach(unit => {\r\n                        const metricIndex = this.metrics.findIndex(metric => metric.id === unit.metric);\r\n                        if (metricIndex !== -1) {\r\n                            this.metrics[metricIndex].unit = `${unit.metric_name} (${unit.name})`;\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    }\r\n};\r\n</script>\r\n  "],"mappings":"AAoBA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,OAAA;IACA;EACA;EAEAC,QAAA;IACAJ,KAAA,CAAAK,GAAA,kBACAC,IAAA,CAAAC,QAAA;MACA,KAAAL,OAAA,GAAAK,QAAA,CAAAN,IAAA;MACA,KAAAO,WAAA;IACA,GACAC,KAAA,CAAAC,KAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;IACA;EACA;EAEAG,OAAA;IACAL,YAAA;MACAR,KAAA,CAAAK,GAAA,kBACAC,IAAA,CAAAC,QAAA;QACA,KAAAJ,OAAA,GAAAI,QAAA,CAAAN,IAAA,CAAAa,GAAA,CAAAC,MAAA;UACA;YACAC,EAAA,EAAAD,MAAA,CAAAC,EAAA;YACAC,IAAA,EAAAF,MAAA,CAAAE,IAAA;YACAC,IAAA;UACA;QACA;QACA,KAAAC,SAAA;MACA,GACAV,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;IAEAS,UAAA;MACAnB,KAAA,CAAAK,GAAA,gBACAC,IAAA,CAAAC,QAAA;QACAA,QAAA,CAAAN,IAAA,CAAAmB,OAAA,CAAAF,IAAA;UACA,MAAAG,WAAA,QAAAlB,OAAA,CAAAmB,SAAA,CAAAP,MAAA,IAAAA,MAAA,CAAAC,EAAA,KAAAE,IAAA,CAAAH,MAAA;UACA,IAAAM,WAAA;YACA,KAAAlB,OAAA,CAAAkB,WAAA,EAAAH,IAAA,MAAAA,IAAA,CAAAK,WAAA,KAAAL,IAAA,CAAAD,IAAA;UACA;QACA;MACA,GACAR,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}