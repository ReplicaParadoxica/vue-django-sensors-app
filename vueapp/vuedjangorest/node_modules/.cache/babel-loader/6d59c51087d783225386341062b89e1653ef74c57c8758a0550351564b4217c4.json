{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"UnitList\",\n  data() {\n    return {\n      units: [],\n      sortBy: null,\n      sortDesc: false,\n      searchText: \"\",\n      showId: true,\n      showName: true,\n      showPrecision: true,\n      showMetricName: true,\n      showActions: true\n    };\n  },\n  methods: {\n    loadUnits() {\n      axios.get(\"http://localhost:8000/api/units/\").then(response => {\n        this.units = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    sort(column) {\n      if (this.sortBy === column) {\n        this.sortDesc = !this.sortDesc;\n      } else {\n        this.sortBy = column;\n        this.sortDesc = false;\n      }\n      this.units.sort((a, b) => {\n        let aValue = a[this.sortBy];\n        let bValue = b[this.sortBy];\n        if (typeof aValue === \"string\" && typeof bValue === \"string\") {\n          aValue = aValue.toLowerCase();\n          bValue = bValue.toLowerCase();\n        }\n        if (aValue === bValue) {\n          return 0;\n        }\n        if (this.sortDesc) {\n          return aValue > bValue ? -1 : 1;\n        } else {\n          return aValue < bValue ? -1 : 1;\n        }\n      });\n    }\n  },\n  computed: {\n    filteredUnits() {\n      const searchText = this.searchText.toLowerCase();\n      return this.units.filter(unit => {\n        return unit.metric_name.toLowerCase().indexOf(searchText) !== -1;\n      });\n    }\n  },\n  mounted() {\n    this.loadMetrics();\n  }\n};","map":{"version":3,"names":["axios","name","data","units","sortBy","sortDesc","searchText","showId","showName","showPrecision","showMetricName","showActions","methods","loadUnits","get","then","response","catch","error","console","log","sort","column","a","b","aValue","bValue","toLowerCase","computed","filteredUnits","filter","unit","metric_name","indexOf","mounted","loadMetrics"],"sources":["src/views/UnitsList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h2>Units</h2>\r\n        <div class=\"search-container\">\r\n            <input v-model=\"searchText\" type=\"text\" placeholder=\"Search by unit name\" />\r\n        </div>\r\n        <div class=\"metric-checkboxes\">\r\n            <label>\r\n                <input type=\"checkbox\" v-model=\"showId\" /> ID\r\n            </label>\r\n            <label>\r\n                <input type=\"checkbox\" v-model=\"showName\" /> Name\r\n            </label>\r\n            <label>\r\n                <input type=\"checkbox\" v-model=\"showPrecision\" /> Precision\r\n            </label>\r\n            <label>\r\n                <input type=\"checkbox\" v-model=\"showMetricName\" /> Metric Name\r\n            </label>\r\n            <label>\r\n                <input type=\"checkbox\" v-model=\"showActions\" /> Actions\r\n            </label>\r\n        </div>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th v-if=\"showId\" @click=\"sort('id')\">ID</th>\r\n                    <th v-if=\"showName\" @click=\"sort('name')\">Name</th>\r\n                    <th v-if=\"showPrecision\" @click=\"sort('precision')\">Precision</th>\r\n                    <th v-if=\"showMetricName\" @click=\"sort('metric_name')\">Metric Name</th>\r\n                    <th v-if=\"showActions\">Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"(unit, index) in filteredUnits\" :key=\"index\">\r\n                    <td v-if=\"showId\">{{ unit.id }}</td>\r\n                    <td v-if=\"showName\">{{ unit.name }}</td>\r\n                    <td v-if=\"showPrecision\">{{ unit.precision }}</td>\r\n                    <td v-if=\"showMetricName\">{{ unit.metric_name }}</td>\r\n                    <td v-if=\"showActions\">\r\n                        <router-link :to=\"{ path: `/api/units/${unit.id}/` }\" class=\"view-link\">View</router-link>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n    name: \"UnitList\",\r\n    data() {\r\n        return {\r\n            units: [],\r\n            sortBy: null,\r\n            sortDesc: false,\r\n            searchText: \"\",\r\n            showId: true,\r\n            showName: true,\r\n            showPrecision: true,\r\n            showMetricName: true,\r\n            showActions: true,\r\n        };\r\n    },\r\n    methods: {\r\n        loadUnits() {\r\n            axios\r\n                .get(\"http://localhost:8000/api/units/\")\r\n                .then((response) => {\r\n                    this.units = response.data;\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        },\r\n        sort(column) {\r\n            if (this.sortBy === column) {\r\n                this.sortDesc = !this.sortDesc;\r\n            } else {\r\n                this.sortBy = column;\r\n                this.sortDesc = false;\r\n            }\r\n\r\n            this.units.sort((a, b) => {\r\n                let aValue = a[this.sortBy];\r\n                let bValue = b[this.sortBy];\r\n\r\n                if (typeof aValue === \"string\" && typeof bValue === \"string\") {\r\n                    aValue = aValue.toLowerCase();\r\n                    bValue = bValue.toLowerCase();\r\n                }\r\n\r\n                if (aValue === bValue) {\r\n                    return 0;\r\n                } if (this.sortDesc) {\r\n                    return aValue > bValue ? -1 : 1;\r\n                } else {\r\n                    return aValue < bValue ? -1 : 1;\r\n                }\r\n            });\r\n        },\r\n    },\r\n    computed: {\r\n        filteredUnits() {\r\n            const searchText = this.searchText.toLowerCase();\r\n            return this.units.filter((unit) => {\r\n                return unit.metric_name.toLowerCase().indexOf(searchText) !== -1;\r\n            });\r\n        },\r\n\r\n    },\r\n    mounted() {\r\n        this.loadMetrics();\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add your styles here */\r\n</style>\r\n  "],"mappings":"AAgDA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,MAAA;MACAC,QAAA;MACAC,UAAA;MACAC,MAAA;MACAC,QAAA;MACAC,aAAA;MACAC,cAAA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAA;MACAb,KAAA,CACAc,GAAA,qCACAC,IAAA,CAAAC,QAAA;QACA,KAAAb,KAAA,GAAAa,QAAA,CAAAd,IAAA;MACA,GACAe,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;IACAG,KAAAC,MAAA;MACA,SAAAlB,MAAA,KAAAkB,MAAA;QACA,KAAAjB,QAAA,SAAAA,QAAA;MACA;QACA,KAAAD,MAAA,GAAAkB,MAAA;QACA,KAAAjB,QAAA;MACA;MAEA,KAAAF,KAAA,CAAAkB,IAAA,EAAAE,CAAA,EAAAC,CAAA;QACA,IAAAC,MAAA,GAAAF,CAAA,MAAAnB,MAAA;QACA,IAAAsB,MAAA,GAAAF,CAAA,MAAApB,MAAA;QAEA,WAAAqB,MAAA,wBAAAC,MAAA;UACAD,MAAA,GAAAA,MAAA,CAAAE,WAAA;UACAD,MAAA,GAAAA,MAAA,CAAAC,WAAA;QACA;QAEA,IAAAF,MAAA,KAAAC,MAAA;UACA;QACA;QAAA,SAAArB,QAAA;UACA,OAAAoB,MAAA,GAAAC,MAAA;QACA;UACA,OAAAD,MAAA,GAAAC,MAAA;QACA;MACA;IACA;EACA;EACAE,QAAA;IACAC,cAAA;MACA,MAAAvB,UAAA,QAAAA,UAAA,CAAAqB,WAAA;MACA,YAAAxB,KAAA,CAAA2B,MAAA,CAAAC,IAAA;QACA,OAAAA,IAAA,CAAAC,WAAA,CAAAL,WAAA,GAAAM,OAAA,CAAA3B,UAAA;MACA;IACA;EAEA;EACA4B,QAAA;IACA,KAAAC,WAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}